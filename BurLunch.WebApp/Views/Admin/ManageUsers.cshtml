@model List<BurLunch.AuthAPI.Models.User>

<h2 class="text-uppercase mb-4" style="color: #CE0E2D; font-weight: bold; justify-self: center">Управление пользователями</h2>

@if (TempData["Message"] != null)
{
    <div class="alert alert-success">@TempData["Message"]</div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}

<!-- Таблица пользователей -->
<table class="table table-striped table-hover">
    <thead style="background-color: #f7f7f7; color: #333;">
        <tr>
            <th>ID</th>
            <th>Имя пользователя</th>
            <th>Роль</th>
            <th>Действия</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model)
        {
            <tr>
                <td>@user.Id</td>
                <td>@user.Username</td>
                <td>@user.Role</td>
                <td>
                    @if (user.Username != "Admin")
                    {
                        <form method="post" asp-controller="Admin" asp-action="DeleteUser" class="d-inline">
                            <input type="hidden" name="id" value="@user.Id" />
                            <button type="submit" class="btn btn-sm text-white" style="background-color: #CE0E2D; border-radius: 4px;">
                                Удалить
                            </button>
                        </form>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Кнопка для вызова модального окна -->
<button type="button" class="btn text-white mt-3" style="background-color: #CE0E2D; border-radius: 4px;" data-bs-toggle="modal" data-bs-target="#addUserModal">
    + Добавить пользователя
</button>

<!-- Модальное окно -->
<div class="modal fade" id="addUserModal" tabindex="-1" aria-labelledby="addUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header" style="background-color: #CE0E2D; color: white;">
                <h5 class="modal-title" id="addUserModalLabel">Добавить пользователя</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addUserForm">
                    <div class="form-group">
                        <label for="supID">Sup ID</label>
                        <input type="number" class="form-control" id="supID" name="Id" required style="border-radius: 4px;">
                    </div>
                    <div class="form-group mt-3">
                        <label for="Username">Имя пользователя</label>
                        <input type="text" class="form-control" id="Username" name="Username" required style="border-radius: 4px;">
                    </div>
                    <div class="form-group mt-3">
                        <label for="Role">Роль</label>
                        <select class="form-control" id="Role" name="Role" style="border-radius: 4px;">
                            <option value="User">User</option>
                            <option value="Administrator">Administrator</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
                <button type="button" class="btn text-white" id="saveUserBtn" style="background-color: #CE0E2D; border-radius: 4px;">
                    Сохранить
                </button>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        document.getElementById('saveUserBtn').addEventListener('click', function () {
            const form = document.getElementById('addUserForm');
            const formData = new FormData(form);

            // Собираем данные пользователя
            const user = {
                Id: formData.get('Id'),
                Username: formData.get('Username'),
                Role: formData.get('Role')
            };

            console.log('Отправляемые данные пользователя:', user);

            fetch('/Admin/AddUser', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(user)
            })
            .then(response => {
                if (response.ok) {
                    console.log('Пользователь успешно добавлен');
                    location.reload(); // Перезагружаем страницу после успешного добавления
                } else {
                    console.error('Ошибка при добавлении пользователя:', response);
                    alert('Не удалось добавить пользователя.');
                }
            })
            .catch(error => {
                console.error('Ошибка:', error);
                alert('Произошла ошибка при добавлении пользователя.');
            });
        });
    </script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
}

