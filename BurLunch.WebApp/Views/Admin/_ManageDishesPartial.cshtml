@* @model IEnumerable<BurLunch.AuthAPI.Models.Dish>
@using BurLunch.AuthAPI.Models

<h4>Список блюд</h4>
<table class="table">
    <thead>
        <tr>
            <th>Название</th>
            <th>Описание</th>
            <th>Тип блюда</th>
            <th>Действия</th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Any())
        {
            foreach (var dish in Model)
            {
                <tr>
                    <td>@dish.Name</td>
                    <td>@dish.Description</td>
                    <td>@dish.DishType?.Name</td>
                    <td>
                        <button class="btn btn-danger btn-sm" onclick="deleteDish(@dish.Id)">Удалить</button>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="4" class="text-center">Нет данных для отображения</td>
            </tr>
        }
    </tbody>
</table>
<div class="text-center mb-3">
    <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addDishModal">Добавить блюдо</button>
</div>
<button type="button" class="btn text-white mt-3" style="background-color: #CE0E2D; border-radius: 4px;" data-bs-toggle="modal" data-bs-target="#addDishModal">
    + Добавить пользователя
</button>
<!-- Модальное окно для добавления блюда -->
<div class="modal fade" id="addDishModal" tabindex="-1" aria-labelledby="addDishModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addDishModalLabel" style="color: #CE0E2D;">Добавить блюдо</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addDishForm">
                    <div class="mb-3">
                        <label for="dishName" class="form-label">Название блюда</label>
                        <input type="text" class="form-control" id="dishName" required />
                    </div>
                    <div class="mb-3">
                        <label for="dishDescription" class="form-label">Описание блюда</label>
                        <textarea class="form-control" id="dishDescription" rows="3"></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="dishType" class="form-label">Тип блюда</label>
                        <select class="form-select" id="dishType" required>
                            @if (ViewBag.DishTypes != null)
                            {
                                foreach (var type in ViewBag.DishTypes as List<BurLunch.AuthAPI.Models.DishType>)
                                {
                                    <option value="@type.Id">@type.Name</option>
                                }
                            }
                            else
                            {
                                <option value="" disabled selected>Типы блюд недоступны</option>
                            }
                        </select>
                    </div>
                    <button type="button" class="btn btn-primary" onclick="addDish()">Добавить</button>
                    <button type="button" class="btn btn-primary" onclick="addDish(); console.log('Кнопка нажата');">Добавить</button>

                </form>
            </div>
        </div>
    </div>
</div>


@* @section Scripts {
    <script>
        // function addDish() {
        //     const dishName = document.getElementById('dishName').value;
        //     const dishDescription = document.getElementById('dishDescription').value;
        //     const dishTypeId = document.getElementById('dishType').value;

        //     if (!dishName || !dishTypeId) {
        //         alert("Название блюда и тип блюда обязательны!");
        //         return;
        //     }

        //     const dish = {
        //         name: dishName,
        //         description: dishDescription,
        //         dishTypeId: parseInt(dishTypeId)
        //     };

        //     fetch('/Admin/AddDish', {
        //         method: 'POST',
        //         headers: {
        //             'Content-Type': 'application/json'
        //         },
        //         body: JSON.stringify(dish)
        //     })
        //         .then(response => {
        //             if (response.ok) {
        //                 alert("Блюдо успешно добавлено!");
        //                 location.reload();
        //             } else {
        //                 alert("Ошибка при добавлении блюда.");
        //             }
        //         })
        //         .catch(error => {
        //             console.error("Ошибка:", error);
        //             alert("Ошибка при добавлении блюда.");
        //         });
        // }
        window.addDish = function() {
            const dishName = document.getElementById('dishName').value;
            const dishDescription = document.getElementById('dishDescription').value;
            const dishTypeId = document.getElementById('dishType').value;

            console.log("Добавление блюда:", { dishName, dishDescription, dishTypeId });

            if (!dishName || !dishTypeId) {
                alert("Название блюда и тип блюда обязательны!");
                return;
            }

            fetch('/Admin/AddDish', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    name: dishName,
                    description: dishDescription,
                    dishTypeId: parseInt(dishTypeId)
                })
            })
            .then(response => {
                if (response.ok) {
                    alert("Блюдо успешно добавлено!");
                    location.reload();
                } else {
                    alert("Ошибка при добавлении блюда.");
                }
            })
            .catch(error => {
                console.error("Ошибка при отправке запроса:", error);
                alert("Ошибка при добавлении блюда.");
            });
        };


        function deleteDish(id) {
            if (confirm('Вы уверены, что хотите удалить блюдо?')) {
                fetch(`/Admin/DeleteDish/${id}`, { method: 'DELETE' })
                    .then(response => {
                        if (response.ok) {
                            alert('Блюдо успешно удалено');
                            location.reload();
                        } else {
                            alert('Ошибка при удалении блюда');
                        }
                    });
            }
        }

        function refreshDishTable() {
            fetch('/Admin/GetDishes')
                .then(response => response.text())
                .then(html => {
                    document.querySelector('.modal-body').innerHTML = html;
                })
                .catch(error => {
                    console.error("Ошибка при обновлении таблицы:", error);
                });
        }
    </script> *@
}



@model IEnumerable<BurLunch.AuthAPI.Models.Dish>
@using BurLunch.AuthAPI.Models

<h4>Список блюд</h4>
<table class="table">
    <thead>
        <tr>
            <th>Название</th>
            <th>Описание</th>
            <th>Тип блюда</th>
            <th>Действия</th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Any())
        {
            foreach (var dish in Model)
            {
                <tr>
                    <td>@dish.Name</td>
                    <td>@dish.Description</td>
                    <td>@dish.DishType?.Name</td>
                    <td>
                        <button class="btn btn-danger btn-sm" onclick="deleteDish(@dish.Id)">Удалить</button>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="4" class="text-center">Нет данных для отображения</td>
            </tr>
        }
    </tbody>
</table>
<div class="text-center mb-3">
    <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addDishModal">Добавить блюдо</button>
</div>

<!-- Модальное окно для добавления блюда -->
<div class="modal fade" id="addDishModal" tabindex="-1" aria-labelledby="addDishModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addDishModalLabel" style="color: #CE0E2D;">Добавить блюдо</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addDishForm">
                    <div class="mb-3">
                        <label for="dishName" class="form-label">Название блюда</label>
                        <input type="text" class="form-control" id="dishName" required />
                    </div>
                    <div class="mb-3">
                        <label for="dishDescription" class="form-label">Описание блюда</label>
                        <textarea class="form-control" id="dishDescription" rows="3"></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="dishType" class="form-label">Тип блюда</label>
                        <select class="form-select" id="dishType" required>
                            @if (ViewBag.DishTypes != null)
                            {
                                foreach (var type in ViewBag.DishTypes as List<DishType>)
                                {
                                    <option value="@type.Id">@type.Name</option>
                                }
                            }
                            else
                            {
                                <option value="" disabled selected>Типы блюд недоступны</option>
                            }
                        </select>
                    </div>
                    <button type="button" id="addDishButton" class="btn btn-primary" onclick="addDish()">Добавить</button>
                </form>
            </div>
        </div>
    </div>
</div>
